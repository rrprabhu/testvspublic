{"version":3,"sources":["webpack://Terminal/webpack/universalModuleDefinition","webpack://Terminal/webpack/bootstrap","webpack://Terminal/./src/common/services/Services.ts","webpack://Terminal/./src/common/Lifecycle.ts","webpack://Terminal/./src/common/EventEmitter.ts","webpack://Terminal/./src/common/buffer/Constants.ts","webpack://Terminal/./src/common/buffer/CellData.ts","webpack://Terminal/./src/browser/services/Services.ts","webpack://Terminal/./src/common/buffer/AttributeData.ts","webpack://Terminal/./src/browser/Lifecycle.ts","webpack://Terminal/./src/browser/renderer/atlas/Constants.ts","webpack://Terminal/./src/common/Platform.ts","webpack://Terminal/./src/common/data/EscapeSequences.ts","webpack://Terminal/./src/common/input/TextDecoder.ts","webpack://Terminal/./src/browser/renderer/BaseRenderLayer.ts","webpack://Terminal/./src/common/services/ServiceRegistry.ts","webpack://Terminal/./src/common/TypedArrayUtils.ts","webpack://Terminal/./src/common/buffer/BufferLine.ts","webpack://Terminal/./src/browser/LocalizableStrings.ts","webpack://Terminal/./src/common/data/Charsets.ts","webpack://Terminal/./src/common/CharWidth.ts","webpack://Terminal/./src/browser/renderer/atlas/CharAtlasCache.ts","webpack://Terminal/./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://Terminal/./src/browser/ColorManager.ts","webpack://Terminal/./src/browser/renderer/RendererUtils.ts","webpack://Terminal/./src/browser/renderer/CharacterJoinerRegistry.ts","webpack://Terminal/./src/browser/input/Mouse.ts","webpack://Terminal/./src/browser/RenderDebouncer.ts","webpack://Terminal/./src/browser/ScreenDprMonitor.ts","webpack://Terminal/./src/common/Clone.ts","webpack://Terminal/./src/public/Terminal.ts","webpack://Terminal/./src/Terminal.ts","webpack://Terminal/./src/browser/input/CompositionHelper.ts","webpack://Terminal/./src/browser/Viewport.ts","webpack://Terminal/./src/browser/Clipboard.ts","webpack://Terminal/./src/InputHandler.ts","webpack://Terminal/./src/common/parser/EscapeSequenceParser.ts","webpack://Terminal/./src/common/parser/Params.ts","webpack://Terminal/./src/renderer/Renderer.ts","webpack://Terminal/./src/browser/renderer/TextRenderLayer.ts","webpack://Terminal/./src/browser/renderer/GridCache.ts","webpack://Terminal/./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://Terminal/./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://Terminal/./src/browser/renderer/atlas/LRUMap.ts","webpack://Terminal/./src/browser/renderer/SelectionRenderLayer.ts","webpack://Terminal/./src/renderer/CursorRenderLayer.ts","webpack://Terminal/./src/browser/renderer/LinkRenderLayer.ts","webpack://Terminal/./src/browser/Linkifier.ts","webpack://Terminal/./src/browser/services/SelectionService.ts","webpack://Terminal/./src/browser/selection/SelectionModel.ts","webpack://Terminal/./src/browser/input/MoveToCell.ts","webpack://Terminal/./src/browser/services/SoundService.ts","webpack://Terminal/./src/browser/MouseZoneManager.ts","webpack://Terminal/./src/AccessibilityManager.ts","webpack://Terminal/./src/renderer/dom/DomRenderer.ts","webpack://Terminal/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://Terminal/./src/common/input/Keyboard.ts","webpack://Terminal/./src/WindowsMode.ts","webpack://Terminal/./src/browser/services/RenderService.ts","webpack://Terminal/./src/common/services/OptionsService.ts","webpack://Terminal/./src/browser/services/CharSizeService.ts","webpack://Terminal/./src/common/services/BufferService.ts","webpack://Terminal/./src/common/buffer/BufferSet.ts","webpack://Terminal/./src/common/buffer/Buffer.ts","webpack://Terminal/./src/common/CircularList.ts","webpack://Terminal/./src/common/buffer/BufferReflow.ts","webpack://Terminal/./src/common/buffer/Marker.ts","webpack://Terminal/./src/browser/services/MouseService.ts","webpack://Terminal/./src/common/services/CoreService.ts","webpack://Terminal/./src/common/services/LogService.ts","webpack://Terminal/./src/common/services/DirtyRowService.ts","webpack://Terminal/./src/common/services/InstantiationService.ts","webpack://Terminal/./src/public/AddonManager.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ServiceRegistry_1","IBufferService","createDecorator","ICoreService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","Disposable","this","_disposables","_isDisposed","dispose","forEach","length","register","push","unregister","index","indexOf","splice","EventEmitter","_listeners","_this","_event","listener","fire","data","queue","undefined","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","TextDecoder_1","Constants_1","CellData","_super","apply","arguments","content","fg","bg","combinedData","__extends","fromCharData","obj","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","ICharSizeService","IMouseService","IRenderService","ISelectionService","ISoundService","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","addDisposableDomListener","node","type","handler","useCapture","addEventListener","removeEventListener","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","codePoint","String","fromCharCode","utf32ToString","start","end","result","codepoint","StringToUtf32","_interim","clear","decode","input","target","size","startPos","Utf8ToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Constants_2","CharAtlasCache_1","AttributeData_1","RendererUtils_1","BaseRenderLayer","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","toString","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","options","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","css","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","_drawUncachedChars","drawBoldTextInBrightColors","draw","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","DI_TARGET","DI_DEPENDENCIES","storeServiceDependency","serviceRegistry","Map","getServiceDependencies","ctor","has","decorator","Error","set","fillFallback","array","concat","a","b","constructor","CellData_1","CELL_SIZE","DEFAULT_ATTR_DATA","freeze","BufferLine","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","deleteCells","replaceCells","subarray","keys","parseInt","copyFrom","line","newLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","Math","min","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","`","e","f","g","h","j","k","q","u","v","w","z","{","|","}","~","#","@","[","\\","]","^","_","TypedArrayUtils_1","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","table","nul","num","ucs","mid","max","bisearch","getStringCellWidth","CharAtlasUtils_1","DynamicCharAtlas_1","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","removeTerminalFromCache","clonedColors","cursor","cursorAccent","selection","slice","allowTransparency","rgba","is256Color","colorCode","DEFAULT_FOREGROUND","fromHex","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","toPaddedHex","DEFAULT_ANSI_COLORS","ch","ColorManager","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","JoinedCellData","firstCell","_width","CharacterJoinerRegistry","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","substring","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","length_1","newRange","inRange","range","getCoordsRelativeToElement","event","element","getBoundingClientRect","clientX","left","clientY","top","getCoords","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","ceil","getRawByteCoords","RenderDebouncer","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","ScreenDprMonitor","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","val","depth","clonedObject","Array","isArray","Terminal_1","Strings","AddonManager_1","Terminal","_core","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onTitleChange","onScroll","onKey","onRender","onResize","textarea","BufferApiView","markers","blur","focus","columns","_verifyIntegers","writeln","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","addCsiHandler","flag","callback","params","collect","toArray","addOscHandler","ident","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","addMarker","cursorYOffset","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","getOption","optionsService","setOption","reset","applyAddon","addon","loadAddon","values","_i","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","CompositionHelper_1","Viewport_1","Clipboard_1","EscapeSequences_1","InputHandler_1","Renderer_1","Linkifier_1","SelectionService_1","Browser","Lifecycle_1","SoundService_1","MouseZoneManager_1","AccessibilityManager_1","DomRenderer_1","Keyboard_1","EventEmitter_1","BufferLine_1","WindowsMode_1","ColorManager_1","RenderService_1","Services_1","OptionsService_1","Services_2","CharSizeService_1","BufferService_1","Lifecycle_2","MouseService_1","CoreService_1","LogService_1","DirtyRowService_1","InstantiationService_1","browser","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","_dirtyRowService","DirtyRowService","_setupOptionsListeners","_setup","_windowsMode","_renderService","_customKeyEventHandler","parentNode","_parent","body","cursorState","cursorHidden","applicationKeypad","originMode","insertMode","wraparoundMode","bracketedPasteMode","charset","gcharset","glevel","charsets","curAttrData","_eraseAttrData","currentParam","writeBuffer","writeBufferUtf8","_writeInProgress","_xoffSentToCatchUp","_userScrolling","_inputHandler","InputHandler","linkifier","Linkifier","windowsMode","applyWindowsMode","buffers","active","eraseAttrData","preventScroll","activeElement","hasFocus","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","newBufferLength","scrollback","amountToTrim","needsRefresh","trimStart","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","copyHandler","_selectionService","pasteHandlerWrapper","pasteHandler","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","toggle","mouseEvents","disable","enable","setBrowserServices","bindMouse","rendererType","Renderer","DomRenderer","self","pressed","sendButton","shift","meta","ctrl","mod","overrideType","which","detail","deltaY","shiftKey","metaKey","ctrlKey","vt200Mouse","normalMouse","getButton","sendEvent","encode","utfMouse","_vt300Mouse","data_1","_decLocator","page","urxvtMouse","sgrMouse","preventDefault","shouldForceSelection","cancel","moveHandler","sendMove","x10Mouse","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","scroll","eraseAttr","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","useFlowControl","setTimeout","_innerWriteUtf8","bufferOffset","startTime","Date","now","parseUtf8","_innerWrite","parse","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","altKey","keyCode","setgLevel","setgCharset","wasModifierKeyOnlyEvent","charCode","bell","_soundBell","playBellSound","_visualBell","clearTimeout","_visualBellTimer","isNaN","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","term","termName","handleTitle","title","inputHandler","writeInProgress","xoffSentToCatchUp","userScrolling","force","cancelEvents","stopPropagation","bellStyle","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","currentCompositionPosition_1","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","__decorate","__param","FALLBACK_SCROLL_BAR_WIDTH","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","dimensions","offsetHeight","newBufferHeight","round","newScrollTop","offsetParent","_getPixelsScrolled","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","touches","pageY","prepareTextForTerminal","bracketTextForPaste","position","selectionService","clipboardData","setData","triggerUserInput","dispatchPaste","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","Charsets_1","CharWidth_1","EscapeSequenceParser_1","GLEVEL","(",")","*","+","-",".","DECRQSS","hook","put","unhook","pt","block","underline","bar","cursorStyle","cursorBlink","debug","_terminal","_parser","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","setCsiHandlerFallback","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","identifier","setPrintHandler","print","setCsiHandler","insertChars","cursorUp","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributes","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","resetMode","charAttributes","deviceStatus","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","selectDefaultCharset","this_1","selectCharset","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","cursorStartX","cursorStartY","chWidth","curAttr","bufferRow","markDirty","getNullCell","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","_setCursor","_moveCursor","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","_setMode","savedCols","activateAltBuffer","_resetMode","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","isBlinking","bottom","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","Params_1","TransitionTable","setDefault","action","next","addMany","codes","VT500_TRANSITION_TABLE","blueprint","map","unused","PRINTABLES","EXECUTABLES","states","DcsDummy","TRANSITIONS","initialState","currentState","_osc","_params","Params","addParam","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_oscHandlerFb","_dcsHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscHandlers","_dcsHandlers","_activeDcsHandler","_errorHandler","clearPrintHandler","clearExecuteHandler","handlerList","handlerIndex","clearCsiHandler","clearEscHandler","clearOscHandler","clearDcsHandler","setDcsHandlerFallback","clearErrorHandler","transition","osc","dcsHandler","j_1","abort","handlers","isSub","addSubParam","addSubParamDigit","addParamDigit","j_2","j_3","idx","handlers_1","j_4","MAX_SUBPARAMS","maxLength","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","fromArray","newParams","res","getSubParamsAll","TextRenderLayer_1","SelectionRenderLayer_1","CursorRenderLayer_1","LinkRenderLayer_1","CharacterJoinerRegistry_1","nextRendererId","bufferService","_id","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","GridCache_1","BaseRenderLayer_1","container","characterJoinerRegistry","_characterWidth","_characterFont","_characterOverlapCache","_state","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","BaseCharAtlas_1","LRUMap_1","Platform_1","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","cacheValue_1","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","color","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","pop","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","MouseZone","_createLinkHoverEvent","clickCallback","hoverCallback","SelectionModel_1","Mouse_1","MoveToCell_1","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_screenElement","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","col","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","length_2","_isCharWordSeparator","length_3","length_4","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","str","rpt","moveHorizontallyOnly","resetStartingRow","moveToRequestedCol","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","dataURI","split","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","RenderDebouncer_1","ScreenDprMonitor_1","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","DomRendererRowFactory_1","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","endCol_1","colStart","colEnd","terminal","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","swapColor","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","observer_1","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","Clone_1","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","logLevel","disableStdin","tabStopWidth","screenKeys","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet_1","BufferSet","Buffer_1","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","CircularList_1","BufferReflow_1","Marker_1","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","i_1","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","message","optionalParams","_a","log","clearRange","_start","_end","temp","ServiceCollection","entries","_entries","entries_1","_b","service","instance","_services","args","serviceDependencies","sort","serviceArgs","serviceDependencies_1","dependency","firstServiceArgPos","_addons","loadedAddon","_wrappedAddonDispose","activate"],"mappings":"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,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAA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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Terminal\"] = factory();\n\telse\n\t\troot[\"Terminal\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n    */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  screenKeys: boolean;\n  termName: string;\n  useFlowControl: boolean;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T> {\n  (e: T): void;\n}\n\nexport interface IEvent<T> {\n  (listener: (e: T) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T> {\n  event: IEvent<T>;\n  fire(data: T): void;\n}\n\nexport class EventEmitter<T> implements IEventEmitter<T> {\n  private _listeners: IListener<T>[] = [];\n  private _event?: IEvent<T>;\n\n  public get event(): IEvent<T> {\n    if (!this._event) {\n      this._event = (listener: (e: T) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            for (let i = 0; i < this._listeners.length; i++) {\n              if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(data: T): void {\n    const queue: IListener<T>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, data);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (cell.isBgDefault()) {\n        this._ctx.fillStyle = this._colors.background.css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n    } else {\n      if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        this._bufferService.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator = <any>function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { DEFAULT_COLOR, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData): void {\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\n\nconst DEFAULT_FOREGROUND = fromHex('#ffffff');\nconst DEFAULT_BACKGROUND = fromHex('#000000');\nconst DEFAULT_CURSOR = fromHex('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromHex('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF77\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromHex('#2e3436'),\n    fromHex('#cc0000'),\n    fromHex('#4e9a06'),\n    fromHex('#c4a000'),\n    fromHex('#3465a4'),\n    fromHex('#75507b'),\n    fromHex('#06989a'),\n    fromHex('#d3d7cf'),\n    // bright:\n    fromHex('#555753'),\n    fromHex('#ef2929'),\n    fromHex('#8ae234'),\n    fromHex('#fce94f'),\n    fromHex('#729fcf'),\n    fromHex('#ad7fa8'),\n    fromHex('#34e2e2'),\n    fromHex('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`,\n      // Use >>> 0 to force a conversion to an unsigned int\n      rgba: ((r << 24) | (g << 16) | (b << 8) | 0xFF) >>> 0\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    const ch = toPaddedHex(c);\n    colors.push({\n      css: `#${ch}${ch}${ch}`,\n      rgba: ((c << 24) | (c << 16) | (c << 8) | 0xFF) >>> 0\n    });\n  }\n\n  return colors;\n})();\n\nfunction fromHex(css: string): IColor {\n  return {\n    css,\n    rgba: parseInt(css.slice(1), 16) << 8 | 0xFF\n  };\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: (data[0] << 24 | data[1] << 16 | data[2] << 8 | data[3]) >>> 0\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          inRange = false;\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement { return this._core.element; }\n  public get textarea(): HTMLTextAreaElement { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public writeln(data: string): void {\n    this._core.writeln(data);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public addCsiHandler(flag: string, callback: (params: (number | number[])[], collect: string) => boolean): IDisposable {\n    return this._core.addCsiHandler(flag, (params: IParams, collect: string) => callback(params.toArray(), collect));\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string): void {\n    this._core.write(data);\n  }\n  public writeUtf8(data: Uint8Array): void {\n    this._core.writeUtf8(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public static applyAddon(addon: any): void {\n    addon.apply(Terminal);\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value % 1 !== 0) {\n        throw new Error('This API does not accept floating point numbers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, pasteHandler, copyHandler } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from './renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { DomRenderer } from './renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, ICharset, IBufferLine, IAttributeData } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { applyWindowsMode } from './WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreService, ILogService, IDirtyRowService, IInstantiationService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n/**\n * The amount of write requests to queue before sending an XOFF signal to the\n * pty process. This number must be small in order for ^C and similar sequences\n * to be responsive.\n */\nconst WRITE_BUFFER_PAUSE_THRESHOLD = 5;\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  // TODO: This can be changed to an enum or boolean, 0 and 1 seem to be the only options\n  public cursorState: number;\n  public cursorHidden: boolean;\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public applicationKeypad: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  private _decLocator: boolean; // This is unstable and never set\n  public x10Mouse: boolean;\n  public vt200Mouse: boolean;\n  private _vt300Mouse: boolean; // This is unstable and never set\n  public normalMouse: boolean;\n  public mouseEvents: boolean;\n  public sendFocus: boolean;\n  public utfMouse: boolean;\n  public sgrMouse: boolean;\n  public urxvtMouse: boolean;\n\n  // misc\n  public savedCols: number;\n\n  public curAttrData: IAttributeData;\n  private _eraseAttrData: IAttributeData;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // user input states\n  public writeBuffer: string[];\n  public writeBufferUtf8: Uint8Array[];\n  private _writeInProgress: boolean;\n\n  /**\n   * Whether _xterm.js_ sent XOFF in order to catch up with the pty process.\n   * This is a distinct state from writeStopped so that if the user requested\n   * XOFF via ^S that it will not automatically resume when the writeBuffer goes\n   * below threshold.\n   */\n  private _xoffSentToCatchUp: boolean;\n\n  /** Whether writing has been stopped as a result of XOFF */\n  // private _writeStopped: boolean;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n\n    this._setupOptionsListeners();\n    this._setup();\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    if (this._windowsMode) {\n      this._windowsMode.dispose();\n      this._windowsMode = undefined;\n    }\n    if (this._renderService) {\n      this._renderService.dispose();\n    }\n    this._customKeyEventHandler = null;\n    this.write = () => {};\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  private _setup(): void {\n    this._parent = document ? document.body : null;\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrData = DEFAULT_ATTR_DATA.clone();\n\n    this.params = [];\n    this.currentParam = 0;\n\n    // user input states\n    this.writeBuffer = [];\n    this.writeBufferUtf8 = [];\n    this._writeInProgress = false;\n\n    this._xoffSentToCatchUp = false;\n    // this._writeStopped = false;\n    this._userScrolling = false;\n\n    // Register input handler and refire/handle events\n    this._inputHandler = new InputHandler(this, this._bufferService, this._coreService, this._dirtyRowService, this._logService, this.optionsService);\n    this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n    this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n    this.register(this._inputHandler);\n\n    this.linkifier = this.linkifier || new Linkifier(this._bufferService, this._logService);\n\n    if (this.options.windowsMode) {\n      this._windowsMode = applyWindowsMode(this);\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttrData(): IAttributeData {\n    this._eraseAttrData.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrData.bg |= this.curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrData;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this.textarea && document.hasFocus();\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n          }\n          if (this._charSizeService) {\n            this._charSizeService.measure();\n          }\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          if (this.viewport) {\n            this.viewport.syncScrollArea();\n          }\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            if (this._accessibilityManager) {\n              this._accessibilityManager.dispose();\n              this._accessibilityManager = null;\n            }\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'scrollback':\n          const newBufferLength = this.rows + this.optionsService.options.scrollback;\n          if (this.buffer.lines.length > newBufferLength) {\n            const amountToTrim = this.buffer.lines.length - newBufferLength;\n            const needsRefresh = (this.buffer.ydisp - amountToTrim < 0);\n            this.buffer.lines.trimStart(amountToTrim);\n            this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n            this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n            if (needsRefresh) {\n              this.refresh(0, this.rows - 1);\n            }\n          }\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            if (!this._windowsMode) {\n              this._windowsMode = applyWindowsMode(this);\n            }\n          } else {\n            if (this._windowsMode) {\n              this._windowsMode.dispose();\n              this._windowsMode = undefined;\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => pasteHandler(event, this.textarea, this.bracketedPasteMode, e => this._coreService.triggerDataEvent(e, true));\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    this._document = this._parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme;\n    this.options.theme = null;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    this.element.classList.toggle('enable-mouse-events', this.mouseEvents);\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n    } else {\n      this._selectionService.enable();\n    }\n    this._inputHandler.setBrowserServices(this._selectionService);\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return new Renderer(this._colorManager.colors, this, this._bufferService, this._charSizeService, this.optionsService);\n      case 'dom': return new DomRenderer(this, this._colorManager.colors, this._charSizeService, this.optionsService);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    if (this._colorManager) {\n      this._colorManager.setTheme(theme);\n    }\n    if (this._renderService) {\n      this._renderService.setColors(this._colorManager.colors);\n    }\n    if (this.viewport) {\n      this.viewport.onThemeChange(this._colorManager.colors);\n    }\n  }\n\n  /**\n   * XTerm mouse events\n   * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n   * To better understand these\n   * the xterm code is very helpful:\n   * Relevant files:\n   *   button.c, charproc.c, misc.c\n   * Relevant functions in xterm/button.c:\n   *   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n   */\n  public bindMouse(): void {\n    const el = this.element;\n    const self = this;\n    let pressed = 32;\n\n    // mouseup, mousedown, wheel\n    // left click: ^[[M 3<^[[M#3<\n    // wheel up: ^[[M`3>\n    function sendButton(ev: MouseEvent | WheelEvent): void {\n      let button;\n      let pos;\n\n      // get the xterm-style button\n      button = getButton(ev);\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      sendEvent(button, pos);\n\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          pressed = button;\n          break;\n        case 'mouseup':\n          // keep it at the left\n          // button, just in case.\n          pressed = 32;\n          break;\n        case 'wheel':\n          // nothing. don't\n          // interfere with\n          // `pressed`.\n          break;\n      }\n    }\n\n    // motion example of a left click:\n    // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n    function sendMove(ev: MouseEvent): void {\n      let button = pressed;\n      const pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      // buttons marked as motions\n      // are incremented by 32\n      button += 32;\n\n      sendEvent(button, pos);\n    }\n\n    // encode button and\n    // position to characters\n    function encode(data: number[], ch: number): void {\n      if (!self.utfMouse) {\n        if (ch === 255) {\n          data.push(0);\n          return;\n        }\n        if (ch > 127) ch = 127;\n        data.push(ch);\n      } else {\n        if (ch > 2047) {\n          data.push(2047);\n          return;\n        }\n        data.push(ch);\n      }\n    }\n\n    // send a mouse event:\n    // regular/utf8: ^[[M Cb Cx Cy\n    // urxvt: ^[[ Cb ; Cx ; Cy M\n    // sgr: ^[[ Cb ; Cx ; Cy M/m\n    // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n    // locator: CSI P e ; P b ; P r ; P c ; P p & w\n    function sendEvent(button: number, pos: {x: number, y: number}): void {\n      if (self._vt300Mouse) {\n        // NOTE: Unstable.\n        // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        let data = C0.ESC + '[24';\n        if (button === 0) data += '1';\n        else if (button === 1) data += '3';\n        else if (button === 2) data += '5';\n        else if (button === 3) return;\n        else data += '0';\n        data += '~[' + pos.x + ',' + pos.y + ']\\r';\n        self._coreService.triggerDataEvent(data, true);\n        return;\n      }\n\n      if (self._decLocator) {\n        // NOTE: Unstable.\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        if (button === 0) button = 2;\n        else if (button === 1) button = 4;\n        else if (button === 2) button = 6;\n        else if (button === 3) button = 3;\n        self._coreService.triggerDataEvent(C0.ESC + '['\n                  + button\n                  + ';'\n                  + (button === 3 ? 4 : 0)\n                  + ';'\n                  + pos.y\n                  + ';'\n                  + pos.x\n                  + ';'\n                  // Not sure what page is meant to be\n                  + (<any>pos).page || 0\n                  + '&w', true);\n        return;\n      }\n\n      if (self.urxvtMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        pos.x++;\n        pos.y++;\n        self._coreService.triggerDataEvent(C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M', true);\n        return;\n      }\n\n      if (self.sgrMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        self._coreService.triggerDataEvent(C0.ESC + '[<'\n                  + (((button & 3) === 3 ? button & ~3 : button) - 32)\n                  + ';'\n                  + pos.x\n                  + ';'\n                  + pos.y\n                  + ((button & 3) === 3 ? 'm' : 'M'), true);\n        return;\n      }\n\n      const data: number[] = [];\n\n      encode(data, button);\n      encode(data, pos.x);\n      encode(data, pos.y);\n\n      self._coreService.triggerDataEvent(C0.ESC + '[M' + String.fromCharCode.apply(String, data), true);\n    }\n\n    function getButton(ev: MouseEvent): number {\n      let button;\n      let shift;\n      let meta;\n      let ctrl;\n      let mod;\n\n      // two low bits:\n      // 0 = left\n      // 1 = middle\n      // 2 = right\n      // 3 = release\n      // wheel up/down:\n      // 1, and 2 - with 64 added\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          button = ev.button !== null && ev.button !== undefined\n            ? +ev.button\n          : ev.which !== null && ev.which !== undefined\n            ? ev.which - 1\n          : null;\n          break;\n        case 'mouseup':\n          button = 3;\n          break;\n        case 'DOMMouseScroll':\n          button = ev.detail < 0\n            ? 64\n          : 65;\n          break;\n        case 'wheel':\n          button = (<WheelEvent>ev).deltaY < 0\n            ? 64\n          : 65;\n          break;\n      }\n\n      // next three bits are the modifiers:\n      // 4 = shift, 8 = meta, 16 = control\n      shift = ev.shiftKey ? 4 : 0;\n      meta = ev.metaKey ? 8 : 0;\n      ctrl = ev.ctrlKey ? 16 : 0;\n      mod = shift | meta | ctrl;\n\n      // no mods\n      if (self.vt200Mouse) {\n        // ctrl only\n        mod &= ctrl;\n      } else if (!self.normalMouse) {\n        mod = 0;\n      }\n\n      // increment to SP\n      button = (32 + (mod << 2)) + button;\n\n      return button;\n    }\n\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n\n      // Prevent the focus on the textarea from getting lost\n      // and make sure we get focused on mousedown\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      // send the button\n      sendButton(ev);\n\n      // fix for odd bug\n      // if (this.vt200Mouse && !this.normalMouse) {\n      if (this.vt200Mouse) {\n        (<any>ev).overrideType = 'mouseup';\n        sendButton(ev);\n        return this.cancel(ev);\n      }\n\n      // TODO: All mouse handling should be pulled into its own file.\n\n      // bind events\n      let moveHandler: (event: MouseEvent) => void;\n      if (this.normalMouse) {\n        moveHandler = (event: MouseEvent) => {\n          // Do nothing if normal mouse mode is on. This can happen if the mouse is held down when the\n          // terminal exits normalMouse mode.\n          if (!this.normalMouse) {\n            return;\n          }\n          sendMove(event);\n        };\n        // TODO: these event listeners should be managed by the disposable, the Terminal reference may\n        // be kept aroud if Terminal.dispose is fired when the mouse is down\n        this._document.addEventListener('mousemove', moveHandler);\n      }\n\n      // x10 compatibility mode can't send button releases\n      const handler = (ev: MouseEvent) => {\n        if (this.normalMouse && !this.x10Mouse) {\n          sendButton(ev);\n        }\n        if (moveHandler) {\n          // Even though this should only be attached when this.normalMouse is true, holding the\n          // mouse button down when normalMouse changes can happen. Just always try to remove it.\n          this._document.removeEventListener('mousemove', moveHandler);\n          moveHandler = null;\n        }\n        this._document.removeEventListener('mouseup', handler);\n        return this.cancel(ev);\n      };\n      this._document.addEventListener('mouseup', handler);\n\n      return this.cancel(ev);\n    }));\n\n    // if (this.normalMouse) {\n    //  on(this.document, 'mousemove', sendMove);\n    // }\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!this.mouseEvents) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n      if (this.x10Mouse || this._vt300Mouse || this._decLocator) return;\n      sendButton(ev);\n      ev.preventDefault();\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onWheel(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchMove(ev);\n      return this.cancel(ev);\n    }));\n  }\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    if (this._renderService) {\n      this._renderService.refreshRows(start, end);\n    }\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    const eraseAttr = this.eraseAttrData();\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /**\n   * Writes raw utf8 bytes to the terminal.\n   * @param data UintArray with UTF8 bytes to write to the terminal.\n   */\n  public writeUtf8(data: Uint8Array): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values\n    if (!data) {\n      return;\n    }\n\n    this.writeBufferUtf8.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBufferUtf8.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this._coreService.triggerDataEvent(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBufferUtf8.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWriteUtf8();\n      });\n    }\n  }\n\n  protected _innerWriteUtf8(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBufferUtf8 = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBufferUtf8.length > bufferOffset) {\n      const data = this.writeBufferUtf8[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBufferUtf8.length === bufferOffset) {\n        this._coreService.triggerDataEvent(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._inputHandler.parseUtf8(data);\n\n      this.refresh(this._dirtyRowService.start, this._dirtyRowService.end);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBufferUtf8.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBufferUtf8 = this.writeBufferUtf8.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWriteUtf8(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBufferUtf8 = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal.\n   * @param data The text to write to the terminal.\n   */\n  public write(data: string): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values (including the empty string)\n    if (!data) {\n      return;\n    }\n\n    this.writeBuffer.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this._coreService.triggerDataEvent(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBuffer.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWrite();\n      });\n    }\n  }\n\n  protected _innerWrite(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBuffer = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBuffer.length > bufferOffset) {\n      const data = this.writeBuffer[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBuffer.length === bufferOffset) {\n        this._coreService.triggerDataEvent(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._inputHandler.parse(data);\n\n      this.refresh(this._dirtyRowService.start, this._dirtyRowService.end);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBuffer.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBuffer = this.writeBuffer.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBuffer = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal, followed by a break line character (\\n).\n   * @param data The text to write to the terminal.\n   */\n  public writeln(data: string): void {\n    this.write(data + '\\r\\n');\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(flag: string, callback: (params: IParams, collect: string) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(flag, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    if (this._selectionService) {\n      this._selectionService.clearSelection();\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    if (this._selectionService) {\n      this._selectionService.selectAll();\n    }\n  }\n\n  public selectLines(start: number, end: number): void {\n    if (this._selectionService) {\n      this._selectionService.selectLines(start, end);\n    }\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    if (this._charSizeService) {\n      this._charSizeService.measure();\n    }\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const cursorState = this.cursorState;\n    const writeBuffer = this.writeBuffer;\n    const writeBufferUtf8 = this.writeBufferUtf8;\n    const writeInProgress = this._writeInProgress;\n    const xoffSentToCatchUp = this._xoffSentToCatchUp;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._coreService.reset();\n    if (this._selectionService) {\n      this._selectionService.reset();\n    }\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this.cursorState = cursorState;\n    this.writeBuffer = writeBuffer;\n    this.writeBufferUtf8 = writeBufferUtf8;\n    this._writeInProgress = writeInProgress;\n    this._xoffSentToCatchUp = xoffSentToCatchUp;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    if (this.viewport) {\n      this.viewport.syncScrollArea();\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(): void {\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh();\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh();\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh();\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): void {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += amount;\n    // Prevent the page from scrolling when the terminal scrolls\n    ev.preventDefault();\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): void {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    ev.preventDefault();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function pasteHandler(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, triggerUserInput: (data: string) => void): void {\n  ev.stopPropagation();\n\n  let text: string;\n\n  const dispatchPaste = function(text: string): void {\n    text = prepareTextForTerminal(text);\n    text = bracketTextForPaste(text, bracketedPasteMode);\n    triggerUserInput(text);\n    textarea.value = '';\n  };\n\n  if (ev.clipboardData) {\n    text = ev.clipboardData.getData('text/plain');\n    dispatchPaste(text);\n  }\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = null;\n    textarea.style.width = null;\n    textarea.style.height = null;\n    textarea.style.left = null;\n    textarea.style.top = null;\n    textarea.style.zIndex = null;\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService } from 'common/services/Services';\nimport { ISelectionService } from 'browser/services/Services';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(collect: string, params: IParams, flag: number): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(): void {\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _selectionService: ISelectionService | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    protected _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((collect: string, params: IParams, flag: number) => {\n      this._logService.debug('Unknown CSI code: ', { collect, params: params.toArray(), flag: String.fromCharCode(flag) });\n    });\n    this._parser.setEscHandlerFallback((collect: string, flag: number) => {\n      this._logService.debug('Unknown ESC code: ', { collect, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setExecuteHandlerFallback((code: number) => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier: number, data: string) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, data });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end): void => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler('@', (params, collect) => this.insertChars(params));\n    this._parser.setCsiHandler('A', (params, collect) => this.cursorUp(params));\n    this._parser.setCsiHandler('B', (params, collect) => this.cursorDown(params));\n    this._parser.setCsiHandler('C', (params, collect) => this.cursorForward(params));\n    this._parser.setCsiHandler('D', (params, collect) => this.cursorBackward(params));\n    this._parser.setCsiHandler('E', (params, collect) => this.cursorNextLine(params));\n    this._parser.setCsiHandler('F', (params, collect) => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler('G', (params, collect) => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler('H', (params, collect) => this.cursorPosition(params));\n    this._parser.setCsiHandler('I', (params, collect) => this.cursorForwardTab(params));\n    this._parser.setCsiHandler('J', (params, collect) => this.eraseInDisplay(params));\n    this._parser.setCsiHandler('K', (params, collect) => this.eraseInLine(params));\n    this._parser.setCsiHandler('L', (params, collect) => this.insertLines(params));\n    this._parser.setCsiHandler('M', (params, collect) => this.deleteLines(params));\n    this._parser.setCsiHandler('P', (params, collect) => this.deleteChars(params));\n    this._parser.setCsiHandler('S', (params, collect) => this.scrollUp(params));\n    this._parser.setCsiHandler('T', (params, collect) => this.scrollDown(params, collect));\n    this._parser.setCsiHandler('X', (params, collect) => this.eraseChars(params));\n    this._parser.setCsiHandler('Z', (params, collect) => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler('`', (params, collect) => this.charPosAbsolute(params));\n    this._parser.setCsiHandler('a', (params, collect) => this.hPositionRelative(params));\n    this._parser.setCsiHandler('b', (params, collect) => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler('c', (params, collect) => this.sendDeviceAttributes(params, collect));\n    this._parser.setCsiHandler('d', (params, collect) => this.linePosAbsolute(params));\n    this._parser.setCsiHandler('e', (params, collect) => this.vPositionRelative(params));\n    this._parser.setCsiHandler('f', (params, collect) => this.hVPosition(params));\n    this._parser.setCsiHandler('g', (params, collect) => this.tabClear(params));\n    this._parser.setCsiHandler('h', (params, collect) => this.setMode(params, collect));\n    this._parser.setCsiHandler('l', (params, collect) => this.resetMode(params, collect));\n    this._parser.setCsiHandler('m', (params, collect) => this.charAttributes(params));\n    this._parser.setCsiHandler('n', (params, collect) => this.deviceStatus(params, collect));\n    this._parser.setCsiHandler('p', (params, collect) => this.softReset(params, collect));\n    this._parser.setCsiHandler('q', (params, collect) => this.setCursorStyle(params, collect));\n    this._parser.setCsiHandler('r', (params, collect) => this.setScrollRegion(params, collect));\n    this._parser.setCsiHandler('s', (params, collect) => this.saveCursor(params));\n    this._parser.setCsiHandler('u', (params, collect) => this.restoreCursor(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    // some C1 control codes - FIXME: should those be enabled by default?\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, (data) => this.setTitle(data));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, (data) => this.setTitle(data));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler('7', () => this.saveCursor());\n    this._parser.setEscHandler('8', () => this.restoreCursor());\n    this._parser.setEscHandler('D', () => this.index());\n    this._parser.setEscHandler('E', () => this.nextLine());\n    this._parser.setEscHandler('H', () => this.tabSet());\n    this._parser.setEscHandler('M', () => this.reverseIndex());\n    this._parser.setEscHandler('=', () => this.keypadApplicationMode());\n    this._parser.setEscHandler('>', () => this.keypadNumericMode());\n    this._parser.setEscHandler('c', () => this.reset());\n    this._parser.setEscHandler('n', () => this.setgLevel(2));\n    this._parser.setEscHandler('o', () => this.setgLevel(3));\n    this._parser.setEscHandler('|', () => this.setgLevel(3));\n    this._parser.setEscHandler('}', () => this.setgLevel(2));\n    this._parser.setEscHandler('~', () => this.setgLevel(1));\n    this._parser.setEscHandler('%@', () => this.selectDefaultCharset());\n    this._parser.setEscHandler('%G', () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler('(' + flag, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler(')' + flag, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler('*' + flag, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler('+' + flag, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler('-' + flag, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler('.' + flag, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler('/' + flag, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler('#8', () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler('$q', new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  // TODO: When InputHandler moves into common, browser dependencies need to move out\n  public setBrowserServices(selectionService: ISelectionService): void {\n    this._selectionService = selectionService;\n  }\n\n  public parse(data: string): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._stringDecoder.decode(data, this._parseBuffer));\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public parseUtf8(data: Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._utf8Decoder.decode(data, this._parseBuffer));\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._terminal.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._terminal.wraparoundMode;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._terminal.curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y > buffer.scrollBottom) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(flag: string, callback: (params: IParams, collect: string) => boolean): IDisposable {\n    return this._parser.addCsiHandler(flag, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, callback);\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y > buffer.scrollBottom) {\n      buffer.y--;\n      this._terminal.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._terminal.originMode\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    if (this._terminal.originMode) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: IParams): void {\n    this._moveCursor(0, -(params.params[0] || 1));\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this._moveCursor(0, -(params.params[0] || 1));\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * Currently same functionality as CUF.\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: IParams, collect?: string): void {\n    if (params.length < 2 && !collect) {\n      let param = params.params[0] || 1;\n\n      // make buffer local for faster access\n      const buffer = this._bufferService.buffer;\n\n      while (param--) {\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n        buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n      }\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    }\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributes(params: IParams, collect?: string): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n\n    if (!collect) {\n      if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n      } else if (this._terminal.is('linux')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n      }\n    } else if (collect === '>') {\n      // xterm and urxvt\n      // seem to spit this\n      // out around ~370 times (?).\n      if (this._terminal.is('xterm')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n      } else if (this._terminal.is('rxvt-unicode')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n      } else if (this._terminal.is('linux')) {\n        // not supported by linux console.\n        // linux console echoes parameters.\n        this._coreService.triggerDataEvent(params.params[0] + 'c');\n      } else if (this._terminal.is('screen')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n      }\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: IParams, collect?: string): void {\n    for (let i = 0; i < params.length; i++) {\n      this._setMode(params.params[i], collect);\n    }\n  }\n\n  private _setMode(param: number, collect?: string): void {\n    if (!collect) {\n      switch (param) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (param) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          // TODO: move DECCOLM into compat addon\n          this._terminal.savedCols = this._bufferService.cols;\n          this._terminal.resize(132, this._bufferService.rows);\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n        case 1000: // vt200 mouse\n          // no motion.\n          // no modifiers, except control on the wheel.\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n\n          // TODO: Why are params[0] compares nested within a switch for params[0]?\n\n          this._terminal.x10Mouse = param === 9;\n          this._terminal.vt200Mouse = param === 1000;\n          this._terminal.normalMouse = param > 1000;\n          this._terminal.mouseEvents = true;\n          if (this._terminal.element) {\n            this._terminal.element.classList.add('enable-mouse-events');\n          }\n          if (this._selectionService) {\n            this._selectionService.disable();\n          }\n          this._logService.debug('Binding to mouse events.');\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = true;\n          // for wide terminals\n          // simply encodes large values as utf8 characters\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = true;\n          // for wide terminals\n          // does not add 32 to fields\n          // press: ^[[<b;x;yM\n          // release: ^[[<b;x;ym\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = true;\n          // for wide terminals\n          // numbers for fields\n          // press: ^[[b;x;yM\n          // motion: ^[[b;x;yT\n          break;\n        case 25: // show cursor\n          this._terminal.cursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._terminal.eraseAttrData());\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: IParams, collect?: string): void {\n    for (let i = 0; i < params.length; i++) {\n      this._resetMode(params.params[i], collect);\n    }\n  }\n\n  private _resetMode(param: number, collect?: string): void {\n    if (!collect) {\n      switch (param) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (param) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          // TODO: move DECCOLM into compat addon\n          // Note: This impl currently does not enforce col 80, instead reverts\n          // to previous terminal width before entering DECCOLM 132\n          if (this._bufferService.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._bufferService.rows);\n          }\n          delete this._terminal.savedCols;\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._terminal.x10Mouse = false;\n          this._terminal.vt200Mouse = false;\n          this._terminal.normalMouse = false;\n          this._terminal.mouseEvents = false;\n          if (this._terminal.element) {\n            this._terminal.element.classList.remove('enable-mouse-events');\n          }\n          if (this._selectionService) {\n            this._selectionService.enable();\n          }\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = false;\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = false;\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = false;\n          break;\n        case 25: // hide cursor\n          this._terminal.cursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (param === 1049) {\n            this.restoreCursor();\n          }\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._terminal.curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._terminal.curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._terminal.curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: IParams, collect?: string): void {\n    if (!collect) {\n      switch (params.params[0]) {\n        case 5:\n          // status report\n          this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n          break;\n        case 6:\n          // cursor position\n          const y = this._bufferService.buffer.y + 1;\n          const x = this._bufferService.buffer.x + 1;\n          this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n          break;\n      }\n    } else if (collect === '?') {\n      // modern xterm doesnt seem to\n      // respond to any of these except ?6, 6, and 5\n      switch (params.params[0]) {\n        case 6:\n          // cursor position\n          const y = this._bufferService.buffer.y + 1;\n          const x = this._bufferService.buffer.x + 1;\n          this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n          break;\n        case 15:\n          // no printer\n          // this.handler(C0.ESC + '[?11n');\n          break;\n        case 25:\n          // dont support user defined keys\n          // this.handler(C0.ESC + '[?21n');\n          break;\n        case 26:\n          // north american keyboard\n          // this.handler(C0.ESC + '[?27;1;0;0n');\n          break;\n        case 53:\n          // no dec locator/mouse\n          // this.handler(C0.ESC + '[?50n');\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: IParams, collect?: string): void {\n    if (collect === '!') {\n      this._terminal.cursorHidden = false;\n      this._terminal.insertMode = false;\n      this._terminal.originMode = false;\n      this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n      this._terminal.applicationKeypad = false; // ?\n      if (this._terminal.viewport) {\n        this._terminal.viewport.syncScrollArea();\n      }\n      this._coreService.decPrivateModes.applicationCursorKeys = false;\n      this._bufferService.buffer.scrollTop = 0;\n      this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n      this._terminal.curAttrData = DEFAULT_ATTR_DATA.clone();\n      this._bufferService.buffer.x = this._bufferService.buffer.y = 0; // ?\n      this._terminal.charset = null;\n      this._terminal.glevel = 0; // ??\n      this._terminal.charsets = [null]; // ??\n    }\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params?: IParams, collect?: string): void {\n    if (collect === ' ') {\n      const param = params.params[0] || 1;\n      switch (param) {\n        case 1:\n        case 2:\n          this._optionsService.options.cursorStyle = 'block';\n          break;\n        case 3:\n        case 4:\n          this._optionsService.options.cursorStyle = 'underline';\n          break;\n        case 5:\n        case 6:\n          this._optionsService.options.cursorStyle = 'bar';\n          break;\n      }\n      const isBlinking = param % 2 === 1;\n      this._optionsService.options.cursorBlink = isBlinking;\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   * CSI ? Pm r\n   *   currently skipped\n   */\n  public setScrollRegion(params: IParams, collect?: string): void {\n    if (collect) {\n      return;\n    }\n\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._terminal.curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._terminal.curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._terminal.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._terminal.curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._terminal.curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._terminal.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._terminal.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._restrictCursor();\n    this._bufferService.buffer.y++;\n    if (this._bufferService.buffer.y > this._bufferService.buffer.scrollBottom) {\n      this._bufferService.buffer.y--;\n      this._terminal.scroll();\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._terminal.eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * TODO: move DECALN into compat addon\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._terminal.curAttrData.fg;\n    cell.bg = this._terminal.curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\n\ninterface IHandlerCollection<T> {\n  [key: string]: T[];\n}\n\ntype CsiHandler = (params: IParams, collect: string) => boolean | void;\ntype OscHandler = (data: string) => boolean | void;\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n/**\n * Dummy DCS handler as default fallback.\n */\nclass DcsDummy implements IDcsHandler {\n  hook(collect: string, params: IParams, flag: number): void { }\n  put(data: Uint32Array, start: number, end: number): void { }\n  unhook(): void { }\n}\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` contructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _osc: string;\n  protected _params: Params;\n  protected _collect: string;\n\n  // handler lookup containers\n  protected _printHandler: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlers: any;\n  protected _csiHandlers: IHandlerCollection<CsiHandler>;\n  protected _escHandlers: any;\n  protected _oscHandlers: IHandlerCollection<OscHandler>;\n  protected _dcsHandlers: any;\n  protected _activeDcsHandler: IDcsHandler | null;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlerFb: (code: number) => void;\n  protected _csiHandlerFb: (collect: string, params: IParams, flag: number) => void;\n  protected _escHandlerFb: (collect: string, flag: number) => void;\n  protected _oscHandlerFb: (identifier: number, data: string) => void;\n  protected _dcsHandlerFb: IDcsHandler;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = '';\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (collect: string, params: IParams, flag: number): void => { };\n    this._escHandlerFb = (collect: string, flag: number): void => { };\n    this._oscHandlerFb = (identifier: number, data: string): void => { };\n    this._dcsHandlerFb = new DcsDummy();\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscHandlers = Object.create(null);\n    this._dcsHandlers = Object.create(null);\n    this._activeDcsHandler = null;\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler('\\\\', () => {});\n  }\n\n  public dispose(): void {\n    this._executeHandlers = null;\n    this._escHandlers = null;\n    this._dcsHandlers = null;\n    this._activeDcsHandler = null;\n  }\n\n  setPrintHandler(callback: (data: Uint32Array, start: number, end: number) => void): void {\n    this._printHandler = callback;\n  }\n  clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  setExecuteHandler(flag: string, callback: () => void): void {\n    this._executeHandlers[flag.charCodeAt(0)] = callback;\n  }\n  clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  setExecuteHandlerFallback(callback: (code: number) => void): void {\n    this._executeHandlerFb = callback;\n  }\n\n  addCsiHandler(flag: string, callback: CsiHandler): IDisposable {\n    const index = flag.charCodeAt(0);\n    if (this._csiHandlers[index] === undefined) {\n      this._csiHandlers[index] = [];\n    }\n    const handlerList = this._csiHandlers[index];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setCsiHandler(flag: string, callback: (params: IParams, collect: string) => void): void {\n    this._csiHandlers[flag.charCodeAt(0)] = [callback];\n  }\n  clearCsiHandler(flag: string): void {\n    if (this._csiHandlers[flag.charCodeAt(0)]) delete this._csiHandlers[flag.charCodeAt(0)];\n  }\n  setCsiHandlerFallback(callback: (collect: string, params: IParams, flag: number) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  setEscHandler(collectAndFlag: string, callback: () => void): void {\n    this._escHandlers[collectAndFlag] = callback;\n  }\n  clearEscHandler(collectAndFlag: string): void {\n    if (this._escHandlers[collectAndFlag]) delete this._escHandlers[collectAndFlag];\n  }\n  setEscHandlerFallback(callback: (collect: string, flag: number) => void): void {\n    this._escHandlerFb = callback;\n  }\n\n  addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    if (this._oscHandlers[ident] === undefined) {\n      this._oscHandlers[ident] = [];\n    }\n    const handlerList = this._oscHandlers[ident];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setOscHandler(ident: number, callback: (data: string) => void): void {\n    this._oscHandlers[ident] = [callback];\n  }\n  clearOscHandler(ident: number): void {\n    if (this._oscHandlers[ident]) delete this._oscHandlers[ident];\n  }\n  setOscHandlerFallback(callback: (identifier: number, data: string) => void): void {\n    this._oscHandlerFb = callback;\n  }\n\n  setDcsHandler(collectAndFlag: string, handler: IDcsHandler): void {\n    this._dcsHandlers[collectAndFlag] = handler;\n  }\n  clearDcsHandler(collectAndFlag: string): void {\n    if (this._dcsHandlers[collectAndFlag]) delete this._dcsHandlers[collectAndFlag];\n  }\n  setDcsHandlerFallback(handler: IDcsHandler): void {\n    this._dcsHandlerFb = handler;\n  }\n\n  setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  reset(): void {\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = '';\n    this._activeDcsHandler = null;\n    this.precedingCodepoint = 0;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    let osc = this._osc;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n    let dcsHandler: IDcsHandler | null = this._activeDcsHandler;\n    let callback: Function | null = null;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          callback = this._executeHandlers[code];\n          if (callback) callback();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              osc,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params, collect) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect, params, code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          let isSub = false;\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                isSub = false;\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                isSub = true;\n                break;\n              default:  // 0x30 - 0x39\n                if (isSub) params.addSubParamDigit(code - 48);\n                else params.addParamDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect += String.fromCharCode(code);\n          break;\n        case ParserAction.ESC_DISPATCH:\n          callback = this._escHandlers[collect + String.fromCharCode(code)];\n          if (callback) callback(collect, code);\n          else this._escHandlerFb(collect, code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          osc = '';\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = '';\n          break;\n        case ParserAction.DCS_HOOK:\n          dcsHandler = this._dcsHandlers[collect + String.fromCharCode(code)];\n          if (!dcsHandler) dcsHandler = this._dcsHandlerFb;\n          dcsHandler.hook(collect, params, code);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              if (dcsHandler) {\n                dcsHandler.put(data, i, j);\n              }\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          if (dcsHandler) {\n            dcsHandler.unhook();\n            dcsHandler = null;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = '';\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc = '';\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc += utf32ToString(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          if (osc && code !== 0x18 && code !== 0x1a) {\n            // NOTE: OSC subparsing is not part of the original parser\n            // we do basic identifier parsing here to offer a jump table for OSC as well\n            const idx = osc.indexOf(';');\n            if (idx === -1) {\n              this._oscHandlerFb(-1, osc);  // this is an error (malformed OSC)\n            } else {\n              // Note: NaN is not handled here\n              // either catch it with the fallback handler\n              // or with an explicit NaN OSC handler\n              const identifier = parseInt(osc.substring(0, idx));\n              const content = osc.substring(idx + 1);\n              // Trigger OSC Handler\n              const handlers = this._oscHandlers[identifier];\n              let j = handlers ? handlers.length - 1 : -1;\n              for (; j >= 0; j--) {\n                // undefined or true means success and to stop bubbling\n                if (handlers[j](content) !== false) {\n                  break;\n                }\n              }\n              if (j < 0) {\n                this._oscHandlerFb(identifier, content);\n              }\n            }\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = '';\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save non pushable buffers\n    this._osc = osc;\n    this._collect = collect;\n    this._params = params;\n\n    // save active dcs handler reference\n    this._activeDcsHandler = dcsHandler;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    if (!this.length) {\n      return;\n    }\n    if (this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   * Do not use this method directly, consider using `addParam` instead.\n   */\n  public addParamDigit(value: number): void {\n    if (this._rejectDigits) {\n      return;\n    }\n    const v = this.params[this.length - 1] * 10 + value;\n    this.params[this.length - 1] = v > MAX_VALUE ? MAX_VALUE : v;\n  }\n\n  /**\n   * Add a single digit value to current sub parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   * Do not use this method directly, consider using `addSubParam` instead.\n   */\n  public addSubParamDigit(value: number): void {\n    if (!this._subParamsLength || this._rejectDigits || this._rejectSubDigits) {\n      return;\n    }\n    if (this._subParams[this._subParamsLength - 1] === -1) {\n      this._subParams[this._subParamsLength - 1] = value;\n    } else {\n      const v = this._subParams[this._subParamsLength - 1] * 10 + value;\n      this._subParams[this._subParamsLength - 1] = v > MAX_VALUE ? MAX_VALUE : v;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from '../browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from '../browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { LinkRenderLayer } from '../browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _terminal: ITerminal,\n    readonly bufferService: IBufferService,\n    private readonly _charSizeService: ICharSizeService,\n    readonly optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal.screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, bufferService, optionsService),\n      new SelectionRenderLayer(this._terminal.screenElement, 1, this._colors, this._id, bufferService, optionsService),\n      new LinkRenderLayer(this._terminal.screenElement, 2, this._colors, this._id, this._terminal.linkifier, bufferService, optionsService),\n      new CursorRenderLayer(this._terminal.screenElement, 3, this._colors, this._terminal, this._id, bufferService, optionsService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from '../browser/renderer/BaseRenderLayer';\nimport { ITerminal } from '../Types';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private _terminal: ITerminal,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = null;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._terminal.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      if (this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager.dispose();\n        this._cursorBlinkStateManager = null;\n      }\n      // Request a refresh from the terminal as management of rendering is being\n      // moved back to the terminal\n      this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n    }\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._terminal.cursorState || this._terminal.cursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    this._bufferService.buffer.lines.get(cursorY).loadCell(this._bufferService.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._terminal.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      this._renderBlurCursor(this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      this._ctx.restore();\n      this._state.x = this._bufferService.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = this._optionsService.options.cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === this._bufferService.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._terminal.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = this._bufferService.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: null,\n        y: null,\n        isFocused: null,\n        style: null,\n        width: null\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number;\n  private _blinkStartTimeout: number;\n  private _blinkInterval: number;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = null;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = null;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = null;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public resume(): void {\n    this._animationTimeRestarted = null;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, matcher.regex.flags + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          matcher.hoverTooltipCallback(e, uri);\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Something went wrong\n    if (!this._model.selectionStart) {\n      throw new Error('Selection start position was not set before mousemove event');\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    if (this._trimListener) {\n      this._trimListener.dispose();\n    }\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  return moveHorizontallyOnly(startX, startY, targetX, targetY, bufferService, applicationCursor);\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { ITerminal } from '../../Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement: HTMLStyleElement;\n  private _dimensionsStyleElement: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _colors: IColorSet,\n    private _charSizeService: ICharSizeService,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._terminal.cols, this._terminal.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService);\n\n    this._terminal.element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.appendChild(this._rowContainer);\n    this._terminal.screenElement.appendChild(this._selectionContainer);\n\n    this._terminal.linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._terminal.linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._terminal.element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.removeChild(this._rowContainer);\n    this._terminal.screenElement.removeChild(this._selectionContainer);\n    this._terminal.screenElement.removeChild(this._themeStyleElement);\n    this._terminal.screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._terminal.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._terminal.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = (<any>this._terminal)._viewportElement.style.height;\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._terminal.options.fontFamily};` +\n        ` font-size: ${this._terminal.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._terminal.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._terminal.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS} {` +\n        ` animation: blink 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${this._colors.background.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop());\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - this._terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._terminal.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n    this._terminal.refresh(0, this._terminal.rows - 1);\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const terminal = this._terminal;\n\n    const cursorAbsoluteY = terminal.buffer.ybase + terminal.buffer.y;\n    const cursorX = this._terminal.buffer.x;\n    const cursorBlink = this._terminal.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + terminal.buffer.ydisp;\n      const lineData = terminal.buffer.lines.get(row);\n      const cursorStyle = terminal.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, terminal.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ITerminalOptions, IOptionsService } from 'common/services/Services';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private _document: Document,\n    private _optionsService: IOptionsService\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n\n      const swapColor = this._workCell.isInverse();\n\n      // fg\n      if (this._workCell.isFgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? 'background-' : ''}color:rgb(${(AttributeData.toColorRGB(this._workCell.getFgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isFgPalette()) {\n        let fg = this._workCell.getFgColor();\n        if (this._workCell.isBold() && fg < 8 && !swapColor && this._optionsService.options.drawBoldTextInBrightColors) {\n          fg += 8;\n        }\n        charElement.classList.add(`xterm-${swapColor ? 'b' : 'f'}g-${fg}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      // bg\n      if (this._workCell.isBgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? '' : 'background-'}color:rgb(${(AttributeData.toColorRGB(this._workCell.getBgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isBgPalette()) {\n        charElement.classList.add(`xterm-${swapColor ? 'f' : 'b'}g-${this._workCell.getBgColor()}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = isMac ? C0.ESC + 'b' : C0.ESC + '[1;5D';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = isMac ? C0.ESC + 'f' : C0.ESC + '[1;5C';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          result.key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          result.key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - Control Sequence Introducer (CSI)\n          result.key = String.fromCharCode(27);\n        } else if (ev.keyCode === 220) {\n          // ^\\ - String Terminator (ST)\n          result.key = String.fromCharCode(28);\n        } else if (ev.keyCode === 221) {\n          // ^] - Operating System Command (OSC)\n          result.key = String.fromCharCode(29);\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\nimport { ITerminal } from './Types';\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\n\nexport function applyWindowsMode(terminal: ITerminal): IDisposable {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  return terminal.onLineFeed(() => {\n    const line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n    const lastChar = line.get(terminal.cols - 1);\n\n    const nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  });\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderCoordinator should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  cancelEvents: false,\n  useFlowControl: false,\n  wordSeparator: ' ()[]{}\\'\"'\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n              // There is room above the buffer and there are no empty elements below the line,\n              // scroll up\n              this.ybase--;\n              addToY++;\n              if (this.ydisp > 0) {\n                // Viewport is at the top of the buffer, must increase downwards\n                this.ydisp--;\n              }\n            } else {\n              // Add a blank line if there is no buffer left at the top to scroll to, or if there\n              // are blank lines after the cursor\n              this.lines.push(new BufferLine(newCols, nullCell));\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug('sending data', data);\n    this._onData.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ninterface IConsole {\n  log(message?: any, ...optionalParams: any[]): void;\n  error(message?: any, ...optionalParams: any[]): void;\n  info(message?: any, ...optionalParams: any[]): void;\n  trace(message?: any, ...optionalParams: any[]): void;\n  warn(message?: any, ...optionalParams: any[]): void;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      console.log.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      console.info.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      console.warn.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      console.error.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): any {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return <T>new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}